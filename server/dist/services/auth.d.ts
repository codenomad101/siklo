export declare class AuthService {
    register(userData: {
        email: string;
        password: string;
        fullName: string;
        phone?: string;
        dateOfBirth?: string;
        gender?: 'male' | 'female' | 'other';
    }): Promise<{
        user: {
            gender: "male" | "female" | "other" | null;
            coins: number | null;
            userId: string;
            email: string;
            phone: string | null;
            fullName: string;
            profilePictureUrl: string | null;
            dateOfBirth: string | null;
            preferredLanguage: string | null;
            subscriptionType: "free" | "premium" | "premium_plus" | null;
            subscriptionStartDate: Date | null;
            subscriptionEndDate: Date | null;
            totalPoints: number | null;
            level: number | null;
            currentStreak: number | null;
            longestStreak: number | null;
            lastActivityDate: string | null;
            totalStudyTimeMinutes: number | null;
            totalPracticeSessions: number | null;
            totalPracticeScore: number | null;
            weeklyPracticeScore: number | null;
            monthlyPracticeScore: number | null;
            lastPracticeDate: Date | null;
            weeklyPracticeCount: number | null;
            monthlyPracticeCount: number | null;
            isActive: boolean | null;
            isVerified: boolean | null;
            emailVerifiedAt: Date | null;
            createdAt: Date;
            updatedAt: Date;
            lastLoginAt: Date | null;
        };
        token: string;
    }>;
    login(credentials: {
        email: string;
        password: string;
    }): Promise<{
        user: {
            gender: "male" | "female" | "other" | null;
            coins: number | null;
            userId: string;
            email: string;
            phone: string | null;
            fullName: string;
            profilePictureUrl: string | null;
            dateOfBirth: string | null;
            preferredLanguage: string | null;
            subscriptionType: "free" | "premium" | "premium_plus" | null;
            subscriptionStartDate: Date | null;
            subscriptionEndDate: Date | null;
            totalPoints: number | null;
            level: number | null;
            currentStreak: number | null;
            longestStreak: number | null;
            lastActivityDate: string | null;
            totalStudyTimeMinutes: number | null;
            totalPracticeSessions: number | null;
            totalPracticeScore: number | null;
            weeklyPracticeScore: number | null;
            monthlyPracticeScore: number | null;
            lastPracticeDate: Date | null;
            weeklyPracticeCount: number | null;
            monthlyPracticeCount: number | null;
            isActive: boolean | null;
            isVerified: boolean | null;
            emailVerifiedAt: Date | null;
            createdAt: Date;
            updatedAt: Date;
            lastLoginAt: Date | null;
        };
        token: string;
    }>;
    verifyToken(token: string): Promise<{
        gender: "male" | "female" | "other" | null;
        coins: number | null;
        userId: string;
        email: string;
        phone: string | null;
        fullName: string;
        profilePictureUrl: string | null;
        dateOfBirth: string | null;
        preferredLanguage: string | null;
        subscriptionType: "free" | "premium" | "premium_plus" | null;
        subscriptionStartDate: Date | null;
        subscriptionEndDate: Date | null;
        totalPoints: number | null;
        level: number | null;
        currentStreak: number | null;
        longestStreak: number | null;
        lastActivityDate: string | null;
        totalStudyTimeMinutes: number | null;
        totalPracticeSessions: number | null;
        totalPracticeScore: number | null;
        weeklyPracticeScore: number | null;
        monthlyPracticeScore: number | null;
        lastPracticeDate: Date | null;
        weeklyPracticeCount: number | null;
        monthlyPracticeCount: number | null;
        isActive: boolean | null;
        isVerified: boolean | null;
        emailVerifiedAt: Date | null;
        createdAt: Date;
        updatedAt: Date;
        lastLoginAt: Date | null;
    }>;
    updateUserProfile(userId: string, updateData: {
        fullName?: string;
        phone?: string;
        dateOfBirth?: string;
        gender?: 'male' | 'female' | 'other';
        profilePictureUrl?: string;
    }): Promise<{
        gender: "male" | "female" | "other" | null;
        coins: number | null;
        userId: string;
        email: string;
        phone: string | null;
        fullName: string;
        profilePictureUrl: string | null;
        dateOfBirth: string | null;
        preferredLanguage: string | null;
        subscriptionType: "free" | "premium" | "premium_plus" | null;
        subscriptionStartDate: Date | null;
        subscriptionEndDate: Date | null;
        totalPoints: number | null;
        level: number | null;
        currentStreak: number | null;
        longestStreak: number | null;
        lastActivityDate: string | null;
        totalStudyTimeMinutes: number | null;
        totalPracticeSessions: number | null;
        totalPracticeScore: number | null;
        weeklyPracticeScore: number | null;
        monthlyPracticeScore: number | null;
        lastPracticeDate: Date | null;
        weeklyPracticeCount: number | null;
        monthlyPracticeCount: number | null;
        isActive: boolean | null;
        isVerified: boolean | null;
        emailVerifiedAt: Date | null;
        createdAt: Date;
        updatedAt: Date;
        lastLoginAt: Date | null;
    }>;
    changePassword(userId: string, currentPassword: string, newPassword: string): Promise<void>;
}
//# sourceMappingURL=auth.d.ts.map