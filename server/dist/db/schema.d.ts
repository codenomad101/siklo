export declare const subscriptionTypeEnum: import("drizzle-orm/pg-core").PgEnum<["free", "premium", "premium_plus"]>;
export declare const genderEnum: import("drizzle-orm/pg-core").PgEnum<["male", "female", "other"]>;
export declare const difficultyLevelEnum: import("drizzle-orm/pg-core").PgEnum<["easy", "medium", "hard"]>;
export declare const questionTypeEnum: import("drizzle-orm/pg-core").PgEnum<["mcq", "numerical", "true_false", "fill_blank"]>;
export declare const testStatusEnum: import("drizzle-orm/pg-core").PgEnum<["not_started", "in_progress", "completed", "abandoned"]>;
export declare const masteryLevelEnum: import("drizzle-orm/pg-core").PgEnum<["beginner", "intermediate", "advanced", "expert"]>;
export declare const testTypeEnum: import("drizzle-orm/pg-core").PgEnum<["full_length", "sectional", "topic_wise", "previous_year", "daily_practice"]>;
export declare const sessionTypeEnum: import("drizzle-orm/pg-core").PgEnum<["daily", "custom", "revision"]>;
export declare const materialTypeEnum: import("drizzle-orm/pg-core").PgEnum<["pdf", "video", "article", "formula_sheet", "shortcut"]>;
export declare const importanceEnum: import("drizzle-orm/pg-core").PgEnum<["low", "medium", "high", "critical"]>;
export declare const achievementTypeEnum: import("drizzle-orm/pg-core").PgEnum<["streak", "questions", "tests", "accuracy", "special"]>;
export declare const notificationTypeEnum: import("drizzle-orm/pg-core").PgEnum<["practice_reminder", "test_available", "achievement", "streak_alert", "community", "general"]>;
export declare const transactionStatusEnum: import("drizzle-orm/pg-core").PgEnum<["pending", "success", "failed", "refunded"]>;
export declare const transactionTypeEnum: import("drizzle-orm/pg-core").PgEnum<["subscription", "test_purchase", "material_purchase", "coins"]>;
export declare const practiceCategoryEnum: import("drizzle-orm/pg-core").PgEnum<["economy", "gk", "history", "geography", "english", "aptitude", "agriculture", "marathi"]>;
export declare const practiceStatusEnum: import("drizzle-orm/pg-core").PgEnum<["in_progress", "completed", "abandoned"]>;
export declare const examStatusEnum: import("drizzle-orm/pg-core").PgEnum<["not_started", "in_progress", "completed", "abandoned"]>;
export declare const users: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "users";
    schema: undefined;
    columns: {
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "users";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        email: import("drizzle-orm/pg-core").PgColumn<{
            name: "email";
            tableName: "users";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        phone: import("drizzle-orm/pg-core").PgColumn<{
            name: "phone";
            tableName: "users";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        passwordHash: import("drizzle-orm/pg-core").PgColumn<{
            name: "password_hash";
            tableName: "users";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        fullName: import("drizzle-orm/pg-core").PgColumn<{
            name: "full_name";
            tableName: "users";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        profilePictureUrl: import("drizzle-orm/pg-core").PgColumn<{
            name: "profile_picture_url";
            tableName: "users";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        dateOfBirth: import("drizzle-orm/pg-core").PgColumn<{
            name: "date_of_birth";
            tableName: "users";
            dataType: "string";
            columnType: "PgDateString";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        gender: import("drizzle-orm/pg-core").PgColumn<{
            name: "gender";
            tableName: "users";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "male" | "female" | "other";
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: ["male", "female", "other"];
            baseColumn: never;
        }, {}, {}>;
        preferredLanguage: import("drizzle-orm/pg-core").PgColumn<{
            name: "preferred_language";
            tableName: "users";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        subscriptionType: import("drizzle-orm/pg-core").PgColumn<{
            name: "subscription_type";
            tableName: "users";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "free" | "premium" | "premium_plus";
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: ["free", "premium", "premium_plus"];
            baseColumn: never;
        }, {}, {}>;
        subscriptionStartDate: import("drizzle-orm/pg-core").PgColumn<{
            name: "subscription_start_date";
            tableName: "users";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        subscriptionEndDate: import("drizzle-orm/pg-core").PgColumn<{
            name: "subscription_end_date";
            tableName: "users";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        totalPoints: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_points";
            tableName: "users";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        level: import("drizzle-orm/pg-core").PgColumn<{
            name: "level";
            tableName: "users";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        coins: import("drizzle-orm/pg-core").PgColumn<{
            name: "coins";
            tableName: "users";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        currentStreak: import("drizzle-orm/pg-core").PgColumn<{
            name: "current_streak";
            tableName: "users";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        longestStreak: import("drizzle-orm/pg-core").PgColumn<{
            name: "longest_streak";
            tableName: "users";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        lastActivityDate: import("drizzle-orm/pg-core").PgColumn<{
            name: "last_activity_date";
            tableName: "users";
            dataType: "string";
            columnType: "PgDateString";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        totalStudyTimeMinutes: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_study_time_minutes";
            tableName: "users";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        totalPracticeSessions: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_practice_sessions";
            tableName: "users";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        totalPracticeScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_practice_score";
            tableName: "users";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        weeklyPracticeScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "weekly_practice_score";
            tableName: "users";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        monthlyPracticeScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "monthly_practice_score";
            tableName: "users";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        lastPracticeDate: import("drizzle-orm/pg-core").PgColumn<{
            name: "last_practice_date";
            tableName: "users";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        weeklyPracticeCount: import("drizzle-orm/pg-core").PgColumn<{
            name: "weekly_practice_count";
            tableName: "users";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        monthlyPracticeCount: import("drizzle-orm/pg-core").PgColumn<{
            name: "monthly_practice_count";
            tableName: "users";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "users";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        isVerified: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_verified";
            tableName: "users";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        emailVerifiedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "email_verified_at";
            tableName: "users";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "users";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "users";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        lastLoginAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "last_login_at";
            tableName: "users";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const exams: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "exams";
    schema: undefined;
    columns: {
        examId: import("drizzle-orm/pg-core").PgColumn<{
            name: "exam_id";
            tableName: "exams";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        examName: import("drizzle-orm/pg-core").PgColumn<{
            name: "exam_name";
            tableName: "exams";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        examCode: import("drizzle-orm/pg-core").PgColumn<{
            name: "exam_code";
            tableName: "exams";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        description: import("drizzle-orm/pg-core").PgColumn<{
            name: "description";
            tableName: "exams";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        examPattern: import("drizzle-orm/pg-core").PgColumn<{
            name: "exam_pattern";
            tableName: "exams";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        totalMarks: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_marks";
            tableName: "exams";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        durationMinutes: import("drizzle-orm/pg-core").PgColumn<{
            name: "duration_minutes";
            tableName: "exams";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        negativeMarking: import("drizzle-orm/pg-core").PgColumn<{
            name: "negative_marking";
            tableName: "exams";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        negativeMarksRatio: import("drizzle-orm/pg-core").PgColumn<{
            name: "negative_marks_ratio";
            tableName: "exams";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "exams";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "exams";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const subjects: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "subjects";
    schema: undefined;
    columns: {
        subjectId: import("drizzle-orm/pg-core").PgColumn<{
            name: "subject_id";
            tableName: "subjects";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        examId: import("drizzle-orm/pg-core").PgColumn<{
            name: "exam_id";
            tableName: "subjects";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        subjectName: import("drizzle-orm/pg-core").PgColumn<{
            name: "subject_name";
            tableName: "subjects";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        subjectCode: import("drizzle-orm/pg-core").PgColumn<{
            name: "subject_code";
            tableName: "subjects";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        weightagePercentage: import("drizzle-orm/pg-core").PgColumn<{
            name: "weightage_percentage";
            tableName: "subjects";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        totalQuestions: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_questions";
            tableName: "subjects";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        displayOrder: import("drizzle-orm/pg-core").PgColumn<{
            name: "display_order";
            tableName: "subjects";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "subjects";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const topics: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "topics";
    schema: undefined;
    columns: {
        topicId: import("drizzle-orm/pg-core").PgColumn<{
            name: "topic_id";
            tableName: "topics";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        subjectId: import("drizzle-orm/pg-core").PgColumn<{
            name: "subject_id";
            tableName: "topics";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        topicName: import("drizzle-orm/pg-core").PgColumn<{
            name: "topic_name";
            tableName: "topics";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        difficultyLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "difficulty_level";
            tableName: "topics";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "easy" | "medium" | "hard";
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: ["easy", "medium", "hard"];
            baseColumn: never;
        }, {}, {}>;
        estimatedTimeMinutes: import("drizzle-orm/pg-core").PgColumn<{
            name: "estimated_time_minutes";
            tableName: "topics";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        parentTopicId: import("drizzle-orm/pg-core").PgColumn<{
            name: "parent_topic_id";
            tableName: "topics";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        displayOrder: import("drizzle-orm/pg-core").PgColumn<{
            name: "display_order";
            tableName: "topics";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "topics";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const questions: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "questions";
    schema: undefined;
    columns: {
        questionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "question_id";
            tableName: "questions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        topicId: import("drizzle-orm/pg-core").PgColumn<{
            name: "topic_id";
            tableName: "questions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        subjectId: import("drizzle-orm/pg-core").PgColumn<{
            name: "subject_id";
            tableName: "questions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        examId: import("drizzle-orm/pg-core").PgColumn<{
            name: "exam_id";
            tableName: "questions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        questionText: import("drizzle-orm/pg-core").PgColumn<{
            name: "question_text";
            tableName: "questions";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        questionImageUrl: import("drizzle-orm/pg-core").PgColumn<{
            name: "question_image_url";
            tableName: "questions";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        questionType: import("drizzle-orm/pg-core").PgColumn<{
            name: "question_type";
            tableName: "questions";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "mcq" | "numerical" | "true_false" | "fill_blank";
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: ["mcq", "numerical", "true_false", "fill_blank"];
            baseColumn: never;
        }, {}, {}>;
        difficultyLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "difficulty_level";
            tableName: "questions";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "easy" | "medium" | "hard";
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: ["easy", "medium", "hard"];
            baseColumn: never;
        }, {}, {}>;
        marks: import("drizzle-orm/pg-core").PgColumn<{
            name: "marks";
            tableName: "questions";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        negativeMarks: import("drizzle-orm/pg-core").PgColumn<{
            name: "negative_marks";
            tableName: "questions";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        optionA: import("drizzle-orm/pg-core").PgColumn<{
            name: "option_a";
            tableName: "questions";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        optionB: import("drizzle-orm/pg-core").PgColumn<{
            name: "option_b";
            tableName: "questions";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        optionC: import("drizzle-orm/pg-core").PgColumn<{
            name: "option_c";
            tableName: "questions";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        optionD: import("drizzle-orm/pg-core").PgColumn<{
            name: "option_d";
            tableName: "questions";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        optionE: import("drizzle-orm/pg-core").PgColumn<{
            name: "option_e";
            tableName: "questions";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        correctAnswer: import("drizzle-orm/pg-core").PgColumn<{
            name: "correct_answer";
            tableName: "questions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        detailedSolution: import("drizzle-orm/pg-core").PgColumn<{
            name: "detailed_solution";
            tableName: "questions";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        solutionVideoUrl: import("drizzle-orm/pg-core").PgColumn<{
            name: "solution_video_url";
            tableName: "questions";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        hint: import("drizzle-orm/pg-core").PgColumn<{
            name: "hint";
            tableName: "questions";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        yearAppeared: import("drizzle-orm/pg-core").PgColumn<{
            name: "year_appeared";
            tableName: "questions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        source: import("drizzle-orm/pg-core").PgColumn<{
            name: "source";
            tableName: "questions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        timesAttempted: import("drizzle-orm/pg-core").PgColumn<{
            name: "times_attempted";
            tableName: "questions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        timesCorrect: import("drizzle-orm/pg-core").PgColumn<{
            name: "times_correct";
            tableName: "questions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        averageTimeSeconds: import("drizzle-orm/pg-core").PgColumn<{
            name: "average_time_seconds";
            tableName: "questions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        language: import("drizzle-orm/pg-core").PgColumn<{
            name: "language";
            tableName: "questions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "questions";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_by";
            tableName: "questions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "questions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "questions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const userExamPreferences: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "user_exam_preferences";
    schema: undefined;
    columns: {
        preferenceId: import("drizzle-orm/pg-core").PgColumn<{
            name: "preference_id";
            tableName: "user_exam_preferences";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "user_exam_preferences";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        examId: import("drizzle-orm/pg-core").PgColumn<{
            name: "exam_id";
            tableName: "user_exam_preferences";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        targetExamDate: import("drizzle-orm/pg-core").PgColumn<{
            name: "target_exam_date";
            tableName: "user_exam_preferences";
            dataType: "string";
            columnType: "PgDateString";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        dailyStudyGoalMinutes: import("drizzle-orm/pg-core").PgColumn<{
            name: "daily_study_goal_minutes";
            tableName: "user_exam_preferences";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        isPrimaryExam: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_primary_exam";
            tableName: "user_exam_preferences";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "user_exam_preferences";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const testTemplates: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "test_templates";
    schema: undefined;
    columns: {
        templateId: import("drizzle-orm/pg-core").PgColumn<{
            name: "template_id";
            tableName: "test_templates";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        examId: import("drizzle-orm/pg-core").PgColumn<{
            name: "exam_id";
            tableName: "test_templates";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        templateName: import("drizzle-orm/pg-core").PgColumn<{
            name: "template_name";
            tableName: "test_templates";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        testType: import("drizzle-orm/pg-core").PgColumn<{
            name: "test_type";
            tableName: "test_templates";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "full_length" | "sectional" | "topic_wise" | "previous_year" | "daily_practice";
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: ["full_length", "sectional", "topic_wise", "previous_year", "daily_practice"];
            baseColumn: never;
        }, {}, {}>;
        totalQuestions: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_questions";
            tableName: "test_templates";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        totalMarks: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_marks";
            tableName: "test_templates";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        durationMinutes: import("drizzle-orm/pg-core").PgColumn<{
            name: "duration_minutes";
            tableName: "test_templates";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        isFree: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_free";
            tableName: "test_templates";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        price: import("drizzle-orm/pg-core").PgColumn<{
            name: "price";
            tableName: "test_templates";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        instructions: import("drizzle-orm/pg-core").PgColumn<{
            name: "instructions";
            tableName: "test_templates";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        syllabusCoverage: import("drizzle-orm/pg-core").PgColumn<{
            name: "syllabus_coverage";
            tableName: "test_templates";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "test_templates";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "test_templates";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const userTests: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "user_tests";
    schema: undefined;
    columns: {
        userTestId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_test_id";
            tableName: "user_tests";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "user_tests";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        templateId: import("drizzle-orm/pg-core").PgColumn<{
            name: "template_id";
            tableName: "user_tests";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        testStatus: import("drizzle-orm/pg-core").PgColumn<{
            name: "test_status";
            tableName: "user_tests";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "not_started" | "in_progress" | "completed" | "abandoned";
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: ["not_started", "in_progress", "completed", "abandoned"];
            baseColumn: never;
        }, {}, {}>;
        startedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "started_at";
            tableName: "user_tests";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        completedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "completed_at";
            tableName: "user_tests";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        timeTakenSeconds: import("drizzle-orm/pg-core").PgColumn<{
            name: "time_taken_seconds";
            tableName: "user_tests";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        totalQuestionsAttempted: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_questions_attempted";
            tableName: "user_tests";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        correctAnswers: import("drizzle-orm/pg-core").PgColumn<{
            name: "correct_answers";
            tableName: "user_tests";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        incorrectAnswers: import("drizzle-orm/pg-core").PgColumn<{
            name: "incorrect_answers";
            tableName: "user_tests";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        skippedQuestions: import("drizzle-orm/pg-core").PgColumn<{
            name: "skipped_questions";
            tableName: "user_tests";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        marksObtained: import("drizzle-orm/pg-core").PgColumn<{
            name: "marks_obtained";
            tableName: "user_tests";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        totalMarks: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_marks";
            tableName: "user_tests";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        percentage: import("drizzle-orm/pg-core").PgColumn<{
            name: "percentage";
            tableName: "user_tests";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        rank: import("drizzle-orm/pg-core").PgColumn<{
            name: "rank";
            tableName: "user_tests";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        totalParticipants: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_participants";
            tableName: "user_tests";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        percentile: import("drizzle-orm/pg-core").PgColumn<{
            name: "percentile";
            tableName: "user_tests";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "user_tests";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const userProgress: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "user_progress";
    schema: undefined;
    columns: {
        progressId: import("drizzle-orm/pg-core").PgColumn<{
            name: "progress_id";
            tableName: "user_progress";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "user_progress";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        topicId: import("drizzle-orm/pg-core").PgColumn<{
            name: "topic_id";
            tableName: "user_progress";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        subjectId: import("drizzle-orm/pg-core").PgColumn<{
            name: "subject_id";
            tableName: "user_progress";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        totalQuestionsAttempted: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_questions_attempted";
            tableName: "user_progress";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        correctAnswers: import("drizzle-orm/pg-core").PgColumn<{
            name: "correct_answers";
            tableName: "user_progress";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        totalTimeSpentSeconds: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_time_spent_seconds";
            tableName: "user_progress";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        masteryLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "mastery_level";
            tableName: "user_progress";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "beginner" | "intermediate" | "advanced" | "expert";
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: ["beginner", "intermediate", "advanced", "expert"];
            baseColumn: never;
        }, {}, {}>;
        masteryPercentage: import("drizzle-orm/pg-core").PgColumn<{
            name: "mastery_percentage";
            tableName: "user_progress";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        lastPracticedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "last_practiced_at";
            tableName: "user_progress";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        practiceCount: import("drizzle-orm/pg-core").PgColumn<{
            name: "practice_count";
            tableName: "user_progress";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        averageAccuracy: import("drizzle-orm/pg-core").PgColumn<{
            name: "average_accuracy";
            tableName: "user_progress";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        averageTimePerQuestionSeconds: import("drizzle-orm/pg-core").PgColumn<{
            name: "average_time_per_question_seconds";
            tableName: "user_progress";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        needsRevision: import("drizzle-orm/pg-core").PgColumn<{
            name: "needs_revision";
            tableName: "user_progress";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "user_progress";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const userNotes: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "user_notes";
    schema: undefined;
    columns: {
        noteId: import("drizzle-orm/pg-core").PgColumn<{
            name: "note_id";
            tableName: "user_notes";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "user_notes";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        noteTitle: import("drizzle-orm/pg-core").PgColumn<{
            name: "note_title";
            tableName: "user_notes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        noteContent: import("drizzle-orm/pg-core").PgColumn<{
            name: "note_content";
            tableName: "user_notes";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        noteColor: import("drizzle-orm/pg-core").PgColumn<{
            name: "note_color";
            tableName: "user_notes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        topicId: import("drizzle-orm/pg-core").PgColumn<{
            name: "topic_id";
            tableName: "user_notes";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        subjectId: import("drizzle-orm/pg-core").PgColumn<{
            name: "subject_id";
            tableName: "user_notes";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        questionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "question_id";
            tableName: "user_notes";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        isPinned: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_pinned";
            tableName: "user_notes";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        isFavorite: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_favorite";
            tableName: "user_notes";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        tags: import("drizzle-orm/pg-core").PgColumn<{
            name: "tags";
            tableName: "user_notes";
            dataType: "json";
            columnType: "PgJson";
            data: string[];
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "user_notes";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "user_notes";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const studyMaterials: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "study_materials";
    schema: undefined;
    columns: {
        materialId: import("drizzle-orm/pg-core").PgColumn<{
            name: "material_id";
            tableName: "study_materials";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        topicId: import("drizzle-orm/pg-core").PgColumn<{
            name: "topic_id";
            tableName: "study_materials";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        subjectId: import("drizzle-orm/pg-core").PgColumn<{
            name: "subject_id";
            tableName: "study_materials";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        materialTitle: import("drizzle-orm/pg-core").PgColumn<{
            name: "material_title";
            tableName: "study_materials";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        materialType: import("drizzle-orm/pg-core").PgColumn<{
            name: "material_type";
            tableName: "study_materials";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "pdf" | "video" | "article" | "formula_sheet" | "shortcut";
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: ["pdf", "video", "article", "formula_sheet", "shortcut"];
            baseColumn: never;
        }, {}, {}>;
        contentUrl: import("drizzle-orm/pg-core").PgColumn<{
            name: "content_url";
            tableName: "study_materials";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        fileSizeMb: import("drizzle-orm/pg-core").PgColumn<{
            name: "file_size_mb";
            tableName: "study_materials";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        durationMinutes: import("drizzle-orm/pg-core").PgColumn<{
            name: "duration_minutes";
            tableName: "study_materials";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        description: import("drizzle-orm/pg-core").PgColumn<{
            name: "description";
            tableName: "study_materials";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        isFree: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_free";
            tableName: "study_materials";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        price: import("drizzle-orm/pg-core").PgColumn<{
            name: "price";
            tableName: "study_materials";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        viewCount: import("drizzle-orm/pg-core").PgColumn<{
            name: "view_count";
            tableName: "study_materials";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        downloadCount: import("drizzle-orm/pg-core").PgColumn<{
            name: "download_count";
            tableName: "study_materials";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        rating: import("drizzle-orm/pg-core").PgColumn<{
            name: "rating";
            tableName: "study_materials";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        language: import("drizzle-orm/pg-core").PgColumn<{
            name: "language";
            tableName: "study_materials";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "study_materials";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "study_materials";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const notifications: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "notifications";
    schema: undefined;
    columns: {
        notificationId: import("drizzle-orm/pg-core").PgColumn<{
            name: "notification_id";
            tableName: "notifications";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "notifications";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        notificationType: import("drizzle-orm/pg-core").PgColumn<{
            name: "notification_type";
            tableName: "notifications";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "practice_reminder" | "test_available" | "achievement" | "streak_alert" | "community" | "general";
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: ["practice_reminder", "test_available", "achievement", "streak_alert", "community", "general"];
            baseColumn: never;
        }, {}, {}>;
        title: import("drizzle-orm/pg-core").PgColumn<{
            name: "title";
            tableName: "notifications";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        message: import("drizzle-orm/pg-core").PgColumn<{
            name: "message";
            tableName: "notifications";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        actionUrl: import("drizzle-orm/pg-core").PgColumn<{
            name: "action_url";
            tableName: "notifications";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        isRead: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_read";
            tableName: "notifications";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        readAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "read_at";
            tableName: "notifications";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "notifications";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const practiceSessions: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "practice_sessions";
    schema: undefined;
    columns: {
        sessionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_id";
            tableName: "practice_sessions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "practice_sessions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        category: import("drizzle-orm/pg-core").PgColumn<{
            name: "category";
            tableName: "practice_sessions";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "economy" | "gk" | "history" | "geography" | "english" | "aptitude" | "agriculture" | "marathi";
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: ["economy", "gk", "history", "geography", "english", "aptitude", "agriculture", "marathi"];
            baseColumn: never;
        }, {}, {}>;
        status: import("drizzle-orm/pg-core").PgColumn<{
            name: "status";
            tableName: "practice_sessions";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "in_progress" | "completed" | "abandoned";
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: ["in_progress", "completed", "abandoned"];
            baseColumn: never;
        }, {}, {}>;
        totalQuestions: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_questions";
            tableName: "practice_sessions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        timeLimitMinutes: import("drizzle-orm/pg-core").PgColumn<{
            name: "time_limit_minutes";
            tableName: "practice_sessions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        startedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "started_at";
            tableName: "practice_sessions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        completedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "completed_at";
            tableName: "practice_sessions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        timeSpentSeconds: import("drizzle-orm/pg-core").PgColumn<{
            name: "time_spent_seconds";
            tableName: "practice_sessions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        questionsAttempted: import("drizzle-orm/pg-core").PgColumn<{
            name: "questions_attempted";
            tableName: "practice_sessions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        correctAnswers: import("drizzle-orm/pg-core").PgColumn<{
            name: "correct_answers";
            tableName: "practice_sessions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        incorrectAnswers: import("drizzle-orm/pg-core").PgColumn<{
            name: "incorrect_answers";
            tableName: "practice_sessions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        skippedQuestions: import("drizzle-orm/pg-core").PgColumn<{
            name: "skipped_questions";
            tableName: "practice_sessions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        score: import("drizzle-orm/pg-core").PgColumn<{
            name: "score";
            tableName: "practice_sessions";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        percentage: import("drizzle-orm/pg-core").PgColumn<{
            name: "percentage";
            tableName: "practice_sessions";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        questionsData: import("drizzle-orm/pg-core").PgColumn<{
            name: "questions_data";
            tableName: "practice_sessions";
            dataType: "json";
            columnType: "PgJson";
            data: {
                questionId: string;
                questionText: string;
                options: Array<{
                    id: number;
                    text: string;
                }>;
                correctAnswer: string;
                userAnswer: string;
                isCorrect: boolean;
                timeSpentSeconds: number;
                explanation: string;
                category: string;
            }[];
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "practice_sessions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "practice_sessions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export type User = typeof users.$inferSelect;
export type NewUser = typeof users.$inferInsert;
export type Exam = typeof exams.$inferSelect;
export type NewExam = typeof exams.$inferInsert;
export type Subject = typeof subjects.$inferSelect;
export type NewSubject = typeof subjects.$inferInsert;
export type Topic = typeof topics.$inferSelect;
export type NewTopic = typeof topics.$inferInsert;
export type Question = typeof questions.$inferSelect;
export type NewQuestion = typeof questions.$inferInsert;
export type UserExamPreference = typeof userExamPreferences.$inferSelect;
export type NewUserExamPreference = typeof userExamPreferences.$inferInsert;
export type TestTemplate = typeof testTemplates.$inferSelect;
export type NewTestTemplate = typeof testTemplates.$inferInsert;
export type UserTest = typeof userTests.$inferSelect;
export type NewUserTest = typeof userTests.$inferInsert;
export type UserProgress = typeof userProgress.$inferSelect;
export type NewUserProgress = typeof userProgress.$inferInsert;
export type UserNote = typeof userNotes.$inferSelect;
export type NewUserNote = typeof userNotes.$inferInsert;
export type StudyMaterial = typeof studyMaterials.$inferSelect;
export type NewStudyMaterial = typeof studyMaterials.$inferInsert;
export type Notification = typeof notifications.$inferSelect;
export type NewNotification = typeof notifications.$inferInsert;
export declare const dynamicExamSessions: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "dynamic_exam_sessions";
    schema: undefined;
    columns: {
        sessionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_id";
            tableName: "dynamic_exam_sessions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "dynamic_exam_sessions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        examName: import("drizzle-orm/pg-core").PgColumn<{
            name: "exam_name";
            tableName: "dynamic_exam_sessions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        totalMarks: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_marks";
            tableName: "dynamic_exam_sessions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        durationMinutes: import("drizzle-orm/pg-core").PgColumn<{
            name: "duration_minutes";
            tableName: "dynamic_exam_sessions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        totalQuestions: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_questions";
            tableName: "dynamic_exam_sessions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        negativeMarking: import("drizzle-orm/pg-core").PgColumn<{
            name: "negative_marking";
            tableName: "dynamic_exam_sessions";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        negativeMarksRatio: import("drizzle-orm/pg-core").PgColumn<{
            name: "negative_marks_ratio";
            tableName: "dynamic_exam_sessions";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        questionDistribution: import("drizzle-orm/pg-core").PgColumn<{
            name: "question_distribution";
            tableName: "dynamic_exam_sessions";
            dataType: "json";
            columnType: "PgJson";
            data: {
                category: string;
                count: number;
                marksPerQuestion: number;
            }[];
            driverParam: unknown;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        status: import("drizzle-orm/pg-core").PgColumn<{
            name: "status";
            tableName: "dynamic_exam_sessions";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "not_started" | "in_progress" | "completed" | "abandoned";
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: ["not_started", "in_progress", "completed", "abandoned"];
            baseColumn: never;
        }, {}, {}>;
        startedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "started_at";
            tableName: "dynamic_exam_sessions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        completedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "completed_at";
            tableName: "dynamic_exam_sessions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        timeSpentSeconds: import("drizzle-orm/pg-core").PgColumn<{
            name: "time_spent_seconds";
            tableName: "dynamic_exam_sessions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        questionsAttempted: import("drizzle-orm/pg-core").PgColumn<{
            name: "questions_attempted";
            tableName: "dynamic_exam_sessions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        correctAnswers: import("drizzle-orm/pg-core").PgColumn<{
            name: "correct_answers";
            tableName: "dynamic_exam_sessions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        incorrectAnswers: import("drizzle-orm/pg-core").PgColumn<{
            name: "incorrect_answers";
            tableName: "dynamic_exam_sessions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        skippedQuestions: import("drizzle-orm/pg-core").PgColumn<{
            name: "skipped_questions";
            tableName: "dynamic_exam_sessions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        marksObtained: import("drizzle-orm/pg-core").PgColumn<{
            name: "marks_obtained";
            tableName: "dynamic_exam_sessions";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        percentage: import("drizzle-orm/pg-core").PgColumn<{
            name: "percentage";
            tableName: "dynamic_exam_sessions";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        questionsData: import("drizzle-orm/pg-core").PgColumn<{
            name: "questions_data";
            tableName: "dynamic_exam_sessions";
            dataType: "json";
            columnType: "PgJson";
            data: {
                questionId: string;
                questionText: string;
                options: Array<{
                    id: number;
                    text: string;
                }>;
                correctAnswer: string;
                userAnswer: string;
                isCorrect: boolean;
                timeSpentSeconds: number;
                marksObtained: number;
                category: string;
            }[];
            driverParam: unknown;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "dynamic_exam_sessions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "dynamic_exam_sessions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export type DynamicExamSession = typeof dynamicExamSessions.$inferSelect;
export type NewDynamicExamSession = typeof dynamicExamSessions.$inferInsert;
//# sourceMappingURL=schema.d.ts.map